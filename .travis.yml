before_install:
- openssl aes-256-cbc -K $encrypted_dc63bad441df_key -iv $encrypted_dc63bad441df_iv
  -in jakartaee8-usrmgmt-ef18fa077c57.json.enc -out jakartaee8-usrmgmt-ef18fa077c57.json
  -d
  - curl https://sdk.cloud.google.com | bash > /dev/null
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components install kubectl
 
    
language: java

jobs:
  include:
    - stage: Test
      script: mvn test -B
    - stage: Push image to GCP
      script: 
      - mvn package
      - gcloud auth activate-service-account harsha@jakartaee8-usrmgmt.iam.gserviceaccount.com --key-file=jakartaee8-usrmgmt-ef18fa077c57.json
      - gcloud --quiet config set compute/zone "asia-southeast1"
      - cat jakartaee8-usrmgmt-ef18fa077c57.json | docker login -u _json_key --password-stdin https://asia.gcr.io
      - docker build -t asia.gcr.io/jakartaee8-usrmgmt/usermanagement:$TRAVIS_BUILD_NUMBER .
      - docker push asia.gcr.io/jakartaee8-usrmgmt/usermanagement:$TRAVIS_BUILD_NUMBER
    - stage: Deploy to Kubernetes
      script: 
      - gcloud auth activate-service-account harsha@jakartaee8-usrmgmt.iam.gserviceaccount.com --key-file=jakartaee8-usrmgmt-ef18fa077c57.json
      - kubectl create deployment usrmgmt-web --image=asia.gcr.io/jakartaee8-usrmgmt/usermanagement:$TRAVIS_BUILD_NUMBER
      - kubectl get pods
    - stage: Expose to internet
      script: 
      - kubectl expose deployment usrmgmt-web --type=LoadBalancer --port 80 --target-port 9090
